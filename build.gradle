import org.eclipse.jgit.lib.Repository
import pl.allegro.tech.build.axion.release.domain.VersionSanitizer

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id 'application'
    id 'pl.allegro.tech.build.axion-release' version '1.11.0'
}

application {
    mainClassName = 'pl.aetas.blog.axion.MainKt'
}

jar {
    manifest {
        attributes 'Main-Class': 'pl.aetas.blog.axion.MainKt'
    }
}

scmVersion {
    useHighestVersion = true // increment version regardless of tags orders (next after highest found on any branch)
    branchVersionCreator = [
        'hotfix/.*': 'simple', // do not add anything to version on hotfix branch
        'feature/.*': 'versionWithBranch' // on feature branches add name of branch to version postfix (additionally see custom tag serializer below)
    ]
    versionIncrementer 'incrementMinor' // increment minor by default
    branchVersionIncrementer = [
        'hotfix/.*': 'incrementPatch', // on hotfix branches - increment patch
    ]

    tag { // tagging/versioning with branch name on "feature/*" branches (e.g. 1.2.0-feature-my-branch)
        prefix = 'agritask'
        serialize = { rules, version ->
            def branch = Repository.shortenRefName(project.property("release.overriddenBranchName"))
            if (branch.startsWith('feature/')) {
                System.out.println "Invoke method $rules"
                def sanitizedBranch = new VersionSanitizer().sanitize(branch)
                return rules.prefix ? rules.prefix + rules.versionSeparator + version + rules.versionSeparator + sanitizedBranch : version + rules.versionSeparator + sanitizedBranch
            }

            return rules.prefix ? rules.prefix + rules.versionSeparator + version : version
        }
    }
}

group 'pl.aetas'
version = scmVersion.version

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

allprojects {
    project.version = scmVersion.version
}
